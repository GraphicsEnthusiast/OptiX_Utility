optix_wrapper方針

- GAS/IASとPipelineを切り離す。
  異なるPipeline間でGAS/IASを再利用できるようにする。
  - GASのBuildInputのnumSbtRecords, sbtIndexOffsetBuffer, flagsが同じになる必要があるため
    メッシュ中のマテリアルの区別はジオメトリに属するものとする。マテリアルそのものはジオメトリとは切り離される。
- 本来ある自由度は基本的には維持する。
  例: SBT中のレコードはレイタイプ(= optixTrace時のオフセット)ごとに異なる値を持てる。


Material
- OptiX 6と同様にレイタイプごとにHitGroupを登録する。
- OptiX 6とは異なり、マテリアル全体で共通のSBTデータを持つのではなく、レイタイプごとに持つ。
  HitGroupと併せて登録する。HitGroupはパイプラインに属しているためSBTデータはPipelineごとに区別。

GeometryInstance
- GASのBuildInputと一対一対応。
- マテリアル数を設定する。
  マテリアルの区別はパイプラインとは切り離された概念。
  - 各マテリアルごとにジオメトリのフラグを設定する。
- SBTデータを持つことができる。
  持つデータはパイプラインとは切り離すことにする。
  (パイプラインごとに異なるデータとすることも容易か)
- インスタンシング時にマテリアルを切り替えられるように、マテリアルセットの概念を取り入れる。
  実際のMaterialはマテリアルのインデックスだけでなく、マテリアルセットのインデックスを併せて登録する。

- TraversableHandleをユーザーが直接扱う現状の実装では、ローンチ前にGAS, SBT Layout, IASのセットアップをユーザー側で終えておく必要がある。
  逆に言えばWrapper側ではSBTLayoutの生成まではローンチ時には終わっているとみなすことができる。

GASのDirty化条件:
1. GASに対するGeomInstの追加・削除 (Auto)
2. GASのビルド設定の更新 (Auto)
3. GASに所属するGeomInstのジオメトリデータの更新

SBT LayoutのDirty化条件:
1. Sceneに所属するGASのDirty化 (Auto)
2. Sceneに所属するGASのNumMaterialSets変更 (Auto)
3. Sceneに所属するGASのNumRayTypes変更 (Auto)

IASのDirty化条件:
1. SBT LayoutがDirty化 (Auto)
2. IASに対するInstanceの追加・削除 (Auto)
3. IASのビルド設定の更新 (Auto)
4. IASに所属するInstanceのデータの更新

SBTのDirty化条件:
1. SBT LayoutのDirty化
2. GeomInstのRecordDataの更新
3. GeomInstに所属するMaterialの更新
4. Sceneの切り替え

(Auto)は該当の条件によるDirty化が自動で行われることを示す。
例: GASに対するGeomInstの追加・削除 (Auto)
    この操作を行ったときにGASが自動でdirty状態になることを示す。